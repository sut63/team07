/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntCarCheckInOut,
    EntCarCheckInOutFromJSON,
    EntCarCheckInOutFromJSONTyped,
    EntCarCheckInOutToJSON,
    EntCarInspection,
    EntCarInspectionFromJSON,
    EntCarInspectionFromJSONTyped,
    EntCarInspectionToJSON,
    EntCarbrand,
    EntCarbrandFromJSON,
    EntCarbrandFromJSONTyped,
    EntCarbrandToJSON,
    EntInspectionResult,
    EntInspectionResultFromJSON,
    EntInspectionResultFromJSONTyped,
    EntInspectionResultToJSON,
    EntInsurance,
    EntInsuranceFromJSON,
    EntInsuranceFromJSONTyped,
    EntInsuranceToJSON,
    EntTransport,
    EntTransportFromJSON,
    EntTransportFromJSONTyped,
    EntTransportToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntAmbulanceEdges
 */
export interface EntAmbulanceEdges {
    /**
     * Ambulance holds the value of the ambulance edge.
     * @type {Array<EntTransport>}
     * @memberof EntAmbulanceEdges
     */
    ambulance?: Array<EntTransport>;
    /**
     * Carcheckinout holds the value of the carcheckinout edge.
     * @type {Array<EntCarCheckInOut>}
     * @memberof EntAmbulanceEdges
     */
    carcheckinout?: Array<EntCarCheckInOut>;
    /**
     * Carinspections holds the value of the carinspections edge.
     * @type {Array<EntCarInspection>}
     * @memberof EntAmbulanceEdges
     */
    carinspections?: Array<EntCarInspection>;
    /**
     * 
     * @type {EntCarbrand}
     * @memberof EntAmbulanceEdges
     */
    hasbrand?: EntCarbrand;
    /**
     * 
     * @type {EntInsurance}
     * @memberof EntAmbulanceEdges
     */
    hasinsurance?: EntInsurance;
    /**
     * 
     * @type {EntInspectionResult}
     * @memberof EntAmbulanceEdges
     */
    hasstatus?: EntInspectionResult;
    /**
     * 
     * @type {EntUser}
     * @memberof EntAmbulanceEdges
     */
    hasuser?: EntUser;
}

export function EntAmbulanceEdgesFromJSON(json: any): EntAmbulanceEdges {
    return EntAmbulanceEdgesFromJSONTyped(json, false);
}

export function EntAmbulanceEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntAmbulanceEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ambulance': !exists(json, 'Ambulance') ? undefined : ((json['Ambulance'] as Array<any>).map(EntTransportFromJSON)),
        'carcheckinout': !exists(json, 'Carcheckinout') ? undefined : ((json['Carcheckinout'] as Array<any>).map(EntCarCheckInOutFromJSON)),
        'carinspections': !exists(json, 'Carinspections') ? undefined : ((json['Carinspections'] as Array<any>).map(EntCarInspectionFromJSON)),
        'Hasbrand': !exists(json, 'Hasbrand') ? undefined : EntCarbrandFromJSON(json['Hasbrand']),
        'Hasinsurance': !exists(json, 'Hasinsurance') ? undefined : EntInsuranceFromJSON(json['Hasinsurance']),
        'Hasstatus': !exists(json, 'Hasstatus') ? undefined : EntInspectionResultFromJSON(json['Hasstatus']),
        'Hasuser': !exists(json, 'Hasuser') ? undefined : EntUserFromJSON(json['Hasuser']),
    };
}

export function EntAmbulanceEdgesToJSON(value?: EntAmbulanceEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ambulance': value.ambulance === undefined ? undefined : ((value.ambulance as Array<any>).map(EntTransportToJSON)),
        'carcheckinout': value.carcheckinout === undefined ? undefined : ((value.carcheckinout as Array<any>).map(EntCarCheckInOutToJSON)),
        'carinspections': value.carinspections === undefined ? undefined : ((value.carinspections as Array<any>).map(EntCarInspectionToJSON)),
        'hasbrand': EntCarbrandToJSON(value.hasbrand),
        'hasinsurance': EntInsuranceToJSON(value.hasinsurance),
        'hasstatus': EntInspectionResultToJSON(value.hasstatus),
        'hasuser': EntUserToJSON(value.hasuser),
    };
}
