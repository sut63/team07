/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntAmbulance,
    EntAmbulanceFromJSON,
    EntAmbulanceFromJSONTyped,
    EntAmbulanceToJSON,
    EntCarCheckInOut,
    EntCarCheckInOutFromJSON,
    EntCarCheckInOutFromJSONTyped,
    EntCarCheckInOutToJSON,
    EntCarInspection,
    EntCarInspectionFromJSON,
    EntCarInspectionFromJSONTyped,
    EntCarInspectionToJSON,
    EntCarRepairrecord,
    EntCarRepairrecordFromJSON,
    EntCarRepairrecordFromJSONTyped,
    EntCarRepairrecordToJSON,
    EntCarservice,
    EntCarserviceFromJSON,
    EntCarserviceFromJSONTyped,
    EntCarserviceToJSON,
    EntJobPosition,
    EntJobPositionFromJSON,
    EntJobPositionFromJSONTyped,
    EntJobPositionToJSON,
    EntTransport,
    EntTransportFromJSON,
    EntTransportFromJSONTyped,
    EntTransportToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntUserEdges
 */
export interface EntUserEdges {
    /**
     * Carcheckinout holds the value of the carcheckinout edge.
     * @type {Array<EntCarCheckInOut>}
     * @memberof EntUserEdges
     */
    carcheckinout?: Array<EntCarCheckInOut>;
    /**
     * Carinspections holds the value of the carinspections edge.
     * @type {Array<EntCarInspection>}
     * @memberof EntUserEdges
     */
    carinspections?: Array<EntCarInspection>;
    /**
     * Carrepairrecords holds the value of the carrepairrecords edge.
     * @type {Array<EntCarRepairrecord>}
     * @memberof EntUserEdges
     */
    carrepairrecords?: Array<EntCarRepairrecord>;
    /**
     * 
     * @type {EntJobPosition}
     * @memberof EntUserEdges
     */
    jobposition?: EntJobPosition;
    /**
     * User holds the value of the user edge.
     * @type {Array<EntTransport>}
     * @memberof EntUserEdges
     */
    user?: Array<EntTransport>;
    /**
     * Userid holds the value of the userid edge.
     * @type {Array<EntCarservice>}
     * @memberof EntUserEdges
     */
    userid?: Array<EntCarservice>;
    /**
     * Userof holds the value of the userof edge.
     * @type {Array<EntAmbulance>}
     * @memberof EntUserEdges
     */
    userof?: Array<EntAmbulance>;
}

export function EntUserEdgesFromJSON(json: any): EntUserEdges {
    return EntUserEdgesFromJSONTyped(json, false);
}

export function EntUserEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntUserEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'carcheckinout': !exists(json, 'Carcheckinout') ? undefined : ((json['Carcheckinout'] as Array<any>).map(EntCarCheckInOutFromJSON)),
        'carinspections': !exists(json, 'Carinspections') ? undefined : ((json['Carinspections'] as Array<any>).map(EntCarInspectionFromJSON)),
        'carrepairrecords': !exists(json, 'Carrepairrecords') ? undefined : ((json['Carrepairrecords'] as Array<any>).map(EntCarRepairrecordFromJSON)),
        'jobposition': !exists(json, 'Jobposition') ? undefined : EntJobPositionFromJSON(json['Jobposition']),
        'user': !exists(json, 'User') ? undefined : ((json['User'] as Array<any>).map(EntTransportFromJSON)),
        'userid': !exists(json, 'Userid') ? undefined : ((json['Userid'] as Array<any>).map(EntCarserviceFromJSON)),
        'userof': !exists(json, 'Userof') ? undefined : ((json['Userof'] as Array<any>).map(EntAmbulanceFromJSON)),
    };
}

export function EntUserEdgesToJSON(value?: EntUserEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'carcheckinout': value.carcheckinout === undefined ? undefined : ((value.carcheckinout as Array<any>).map(EntCarCheckInOutToJSON)),
        'carinspections': value.carinspections === undefined ? undefined : ((value.carinspections as Array<any>).map(EntCarInspectionToJSON)),
        'carrepairrecords': value.carrepairrecords === undefined ? undefined : ((value.carrepairrecords as Array<any>).map(EntCarRepairrecordToJSON)),
        'jobposition': EntJobPositionToJSON(value.jobposition),
        'user': value.user === undefined ? undefined : ((value.user as Array<any>).map(EntTransportToJSON)),
        'userid': value.userid === undefined ? undefined : ((value.userid as Array<any>).map(EntCarserviceToJSON)),
        'userof': value.userof === undefined ? undefined : ((value.userof as Array<any>).map(EntAmbulanceToJSON)),
    };
}


