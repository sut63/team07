/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntAmbulance,
    EntAmbulanceFromJSON,
    EntAmbulanceFromJSONTyped,
    EntAmbulanceToJSON,
    EntPurpose,
    EntPurposeFromJSON,
    EntPurposeFromJSONTyped,
    EntPurposeToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntCarCheckInOutEdges
 */
export interface EntCarCheckInOutEdges {
    /**
     * 
     * @type {EntAmbulance}
     * @memberof EntCarCheckInOutEdges
     */
    ambulance?: EntAmbulance;
    /**
     * 
     * @type {EntUser}
     * @memberof EntCarCheckInOutEdges
     */
    name?: EntUser;
    /**
     * 
     * @type {EntPurpose}
     * @memberof EntCarCheckInOutEdges
     */
    purpose?: EntPurpose;
}

export function EntCarCheckInOutEdgesFromJSON(json: any): EntCarCheckInOutEdges {
    return EntCarCheckInOutEdgesFromJSONTyped(json, false);
}

export function EntCarCheckInOutEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntCarCheckInOutEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ambulance': !exists(json, 'ambulance') ? undefined : EntAmbulanceFromJSON(json['ambulance']),
        'name': !exists(json, 'name') ? undefined : EntUserFromJSON(json['name']),
        'purpose': !exists(json, 'purpose') ? undefined : EntPurposeFromJSON(json['purpose']),
    };
}

export function EntCarCheckInOutEdgesToJSON(value?: EntCarCheckInOutEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ambulance': EntAmbulanceToJSON(value.ambulance),
        'name': EntUserToJSON(value.name),
        'purpose': EntPurposeToJSON(value.purpose),
    };
}


