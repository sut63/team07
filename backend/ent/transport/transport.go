// Code generated by entc, DO NOT EDIT.

package transport

const (
	// Label holds the string label denoting the transport type in the database.
	Label = "transport"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSymptom holds the string denoting the symptom field in the database.
	FieldSymptom = "symptom"
	// FieldDrugallergy holds the string denoting the drugallergy field in the database.
	FieldDrugallergy = "drugallergy"
	// FieldNote holds the string denoting the note field in the database.
	FieldNote = "note"

	// EdgeSend holds the string denoting the send edge name in mutations.
	EdgeSend = "send"
	// EdgeReceive holds the string denoting the receive edge name in mutations.
	EdgeReceive = "receive"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeAmbulance holds the string denoting the ambulance edge name in mutations.
	EdgeAmbulance = "ambulance"

	// Table holds the table name of the transport in the database.
	Table = "transports"
	// SendTable is the table the holds the send relation/edge.
	SendTable = "transports"
	// SendInverseTable is the table name for the Hospital entity.
	// It exists in this package in order to avoid circular dependency with the "hospital" package.
	SendInverseTable = "hospitals"
	// SendColumn is the table column denoting the send relation/edge.
	SendColumn = "send"
	// ReceiveTable is the table the holds the receive relation/edge.
	ReceiveTable = "transports"
	// ReceiveInverseTable is the table name for the Hospital entity.
	// It exists in this package in order to avoid circular dependency with the "hospital" package.
	ReceiveInverseTable = "hospitals"
	// ReceiveColumn is the table column denoting the receive relation/edge.
	ReceiveColumn = "receive"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "transports"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user"
	// AmbulanceTable is the table the holds the ambulance relation/edge.
	AmbulanceTable = "transports"
	// AmbulanceInverseTable is the table name for the Ambulance entity.
	// It exists in this package in order to avoid circular dependency with the "ambulance" package.
	AmbulanceInverseTable = "ambulances"
	// AmbulanceColumn is the table column denoting the ambulance relation/edge.
	AmbulanceColumn = "ambulance"
)

// Columns holds all SQL columns for transport fields.
var Columns = []string{
	FieldID,
	FieldSymptom,
	FieldDrugallergy,
	FieldNote,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Transport type.
var ForeignKeys = []string{
	"ambulance",
	"receive",
	"send",
	"user",
}

var (
	// SymptomValidator is a validator for the "symptom" field. It is called by the builders before save.
	SymptomValidator func(string) error
	// DrugallergyValidator is a validator for the "drugallergy" field. It is called by the builders before save.
	DrugallergyValidator func(string) error
	// NoteValidator is a validator for the "note" field. It is called by the builders before save.
	NoteValidator func(string) error
)
