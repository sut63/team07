/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntCarInspectionEdges,
    EntCarInspectionEdgesFromJSON,
    EntCarInspectionEdgesFromJSONTyped,
    EntCarInspectionEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntCarInspection
 */
export interface EntCarInspection {
    /**
     * Blacksmoke holds the value of the "blacksmoke" field.
     * @type {number}
     * @memberof EntCarInspection
     */
    blacksmoke?: number;
    /**
     * Datetime holds the value of the "datetime" field.
     * @type {string}
     * @memberof EntCarInspection
     */
    datetime?: string;
    /**
     * 
     * @type {EntCarInspectionEdges}
     * @memberof EntCarInspection
     */
    edges?: EntCarInspectionEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntCarInspection
     */
    id?: number;
    /**
     * Note holds the value of the "note" field.
     * @type {string}
     * @memberof EntCarInspection
     */
    note?: string;
    /**
     * SoundLevel holds the value of the "sound_level" field.
     * @type {number}
     * @memberof EntCarInspection
     */
    soundLevel?: number;
    /**
     * WheelCenter holds the value of the "wheel_center" field.
     * @type {number}
     * @memberof EntCarInspection
     */
    wheelCenter?: number;
}

export function EntCarInspectionFromJSON(json: any): EntCarInspection {
    return EntCarInspectionFromJSONTyped(json, false);
}

export function EntCarInspectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntCarInspection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blacksmoke': !exists(json, 'blacksmoke') ? undefined : json['blacksmoke'],
        'datetime': !exists(json, 'datetime') ? undefined : json['datetime'],
        'edges': !exists(json, 'edges') ? undefined : EntCarInspectionEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'soundLevel': !exists(json, 'sound_level') ? undefined : json['sound_level'],
        'wheelCenter': !exists(json, 'wheel_center') ? undefined : json['wheel_center'],
    };
}

export function EntCarInspectionToJSON(value?: EntCarInspection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blacksmoke': value.blacksmoke,
        'datetime': value.datetime,
        'edges': EntCarInspectionEdgesToJSON(value.edges),
        'id': value.id,
        'note': value.note,
        'sound_level': value.soundLevel,
        'wheel_center': value.wheelCenter,
    };
}


